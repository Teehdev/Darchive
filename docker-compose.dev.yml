version: "3.9"

services:
  mongodb:
    container_name: mongodb
    image: mongo:4.4.6
    restart: always
    volumes:
      - ./db:/data/db
      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=solina
      - MONGO_INITDB_ROOT_PASSWORD=solina
      - MONGO_INITDB_DATABASE=solina
    networks:
      - virtual-network
  mongo-express:
    image: mongo-express
    container_name: mongoexpress
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=solina
      - ME_CONFIG_MONGODB_ADMINPASSWORD=solina
      - ME_CONFIG_MONGODB_URL=mongodb://solina:solina@mongodb:27017/?authSource=admin
      - ME_CONFIG_BASICAUTH_USERNAME=solina
      - ME_CONFIG_BASICAUTH_PASSWORD=solina
    links:
      - mongodb
    depends_on:
      - mongodb
      - redis
    restart: unless-stopped
    ports:
      - "8081:8081"
    networks:
      - virtual-network
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - ./cache:/data
    networks:
      - virtual-network

  server:
    build:
      context: ./
    container_name: server
    ports:
      - "8080:8080"
    volumes:
      - ./src:/app/src
      - ./uploads:/tmp/uploads
    depends_on:
      - mongodb
      - redis
    networks:
      - virtual-network
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      - MONGO_DB_URI=mongodb://solina:solina@mongodb:27017

networks:
  virtual-network:
    driver: bridge

volumes:
  db:
    driver: local
  cache:
    driver: local